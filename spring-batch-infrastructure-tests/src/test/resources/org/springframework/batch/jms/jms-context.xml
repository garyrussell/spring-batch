<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<import resource="classpath:/data-source-context.xml" />

	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="receiveTimeout" value="100" />
		<!-- This is important... -->
		<property name="sessionTransacted" value="true" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

<!-- 	<bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory"> -->
<!-- 		<property name="brokerURL"> -->
<!-- 			<value>tcp://localhost:61616</value> -->
<!-- 		</property> -->
<!-- 	</bean> -->

<!-- 	<bean id="ccFactory" class="org.springframework.jms.connection.CachingConnectionFactory"> -->
<!-- 		<property name="targetConnectionFactory" ref="connectionFactory" /> -->
<!-- 	</bean> -->

	<bean id="connectionFactory" class="com.rabbitmq.jms.admin.RMQConnectionFactory">
		<property name="uri" value="amqp://guest:guest@localhost:5672" />
	</bean>

	<bean id="txAwareConnectionFactory"
		class="org.springframework.jms.connection.TransactionAwareConnectionFactoryProxy">
		<property name="targetConnectionFactory" ref="connectionFactory" />
		<property name="synchedLocalTransactionAllowed" value="true" />
	</bean>

	<bean id="container" class="org.springframework.batch.container.jms.BatchMessageListenerContainer"
		lazy-init="true">
		<property name="recoveryInterval" value="5000" />
		<!-- We aren't adding a listener here (want to do it in unit test)
		so need to set autoStartup=false -->
		<property name="autoStartup" value="false" />
		<!-- We need the transaction manager, but only because we can't
		intercept the MessageListenerContainer in the right place
		(it tries to open a JMS session before receiveAndExecute()
		so the JMS session commits after every item, not after every chunk) -->
		<property name="transactionManager" ref="transactionManager" />
		<property name="connectionFactory" ref="txAwareConnectionFactory" />
		<property name="destination" ref="queue" />
		<!-- This is important... it forces the container to acknowledge message receipt,
			and avoid duplicate messages in the sunny day case -->
		<property name="sessionTransacted" value="true" />
		<property name="adviceChain">
			<list>
				<!-- Need another transaction manager here so that rollbacks are processed correctly -->
				<bean class="org.springframework.transaction.interceptor.TransactionInterceptor">
					<property name="transactionManager" ref="transactionManager" />
					<property name="transactionAttributes" value="*=PROPAGATION_REQUIRED" />
				</bean>
				<bean class="org.springframework.batch.repeat.interceptor.RepeatOperationsInterceptor">
					<property name="repeatOperations" ref="batchTemplate" />
				</bean>
			</list>
		</property>
	</bean>

<!-- 	<bean id="queue" class="org.apache.activemq.command.ActiveMQQueue"> -->
<!-- 		<constructor-arg value="queue" /> -->
<!-- 	</bean>  -->
	
<!-- 	<bean id="forward" class="org.apache.activemq.command.ActiveMQQueue"> -->
<!-- 		<constructor-arg value="forward" /> -->
<!-- 	</bean>  -->

	<bean id="queue" class="com.rabbitmq.jms.admin.RMQDestination">
		<property name="amqp" value="false" />
		<property name="destinationName" value="queue" />
		<property name="amqpExchangeName" value="jms.ex" />
		<property name="amqpRoutingKey" value="queue" />
		<property name="amqpQueueName" value="queue" />
	</bean>

	<bean id="forward" class="com.rabbitmq.jms.admin.RMQDestination">
		<property name="amqp" value="false" />
		<property name="destinationName" value="forward" />
		<property name="amqpExchangeName" value="jms.ex" />
		<property name="amqpRoutingKey" value="forward" />
		<property name="amqpQueueName" value="forward" />
	</bean>

	<bean id="batchTemplate" class="org.springframework.batch.repeat.support.RepeatTemplate">
		<property name="completionPolicy">
			<bean class="org.springframework.batch.repeat.policy.SimpleCompletionPolicy">
				<constructor-arg value="100" />
			</bean>
		</property>
	</bean>

	<bean id="transactionalBatchTemplate"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
		<property name="proxyInterfaces">
			<value>org.springframework.batch.repeat.RepeatOperations</value>
		</property>
		<property name="proxyTargetClass" value="false" />
		<property name="transactionAttributes" value="*=PROPAGATION_REQUIRED"></property>
		<property name="target">
			<bean class="org.springframework.batch.repeat.support.RepeatTemplate">
				<property name="completionPolicy">
					<bean class="org.springframework.batch.repeat.policy.SimpleCompletionPolicy">
						<constructor-arg value="2" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>


</beans>